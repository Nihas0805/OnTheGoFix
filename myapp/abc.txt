                                                                class Meta:
        model = BreakdownRequest
        fields = [
            "customer",
            "service_provider",
            "description",
            "image",
            "status",
            "latitude",
            "longitude",
            "estimated_date",
        ]
        widgets = {
            "customer": forms.HiddenInput(),  # Readonly Text Input
            "status": forms.Select(attrs={"class": "form-control"}),  # Editable
            "description": forms.HiddenInput(),  # Hidden
            "image": forms.HiddenInput(),  # Hidden
            "service_provider": forms.HiddenInput(),  # Hidden
            "latitude": forms.HiddenInput(),  # Hidden
            "longitude": forms.HiddenInput(),  # Hidden
            "estimated_date": forms.DateInput(attrs={"type": "date", "class": "form-control"}),
        }
        
    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)

        # Combine vehicle type and service type for display
        if self.instance and self.instance.pk:
            service_types_display_text = "\n".join(
                f"{st.get_vehicle_type_display()} : {st.name}"
                for st in self.instance.service_types.all()
            )
            self.fields["service_types_display"].initial = service_types_display_text                              





            <script defer src="https://cdn.jsdelivr.net/npm/@alpinejs/focus@3.x.x/dist/cdn.min.js"></script>
<script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script>
 <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    



    <script src="https://cdn.tailwindcss.com"></script>
  <link
  href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css"
  rel="stylesheet"
/>





<script src="https://cdn.tailwindcss.com"></script>
  <link
  href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css"
  rel="stylesheet"
/>

<div class="mt-20"> <!-- Adjust margin to match navbar height -->
  <div class="row">
    <div class="col-4"></div>
    <div class="col-4">
      {% if messages %}
        {% for m in messages %}
          {% if m.level == DEFAULT_MESSAGE_LEVELS.ERROR %}
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
              <strong>{{ m }}</strong>
              <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
          {% endif %}
          {% if m.level == DEFAULT_MESSAGE_LEVELS.SUCCESS %}
            <div class="alert alert-success alert-dismissible fade show" role="alert">
              <strong>{{ m }}</strong>
              <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
          {% endif %}
        {% endfor %}
      {% endif %}
    </div>
  </div>

  <!-- Main Block -->
  <div class="mt-10">
    {% block main_block %}
    {% endblock %}
  </div>
</div>